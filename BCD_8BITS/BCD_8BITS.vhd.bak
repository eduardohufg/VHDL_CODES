LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

ENTITY BCD_8BITS IS
	PORT (DATO: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
			S1,S2: OUT STD_LOGIC;
			SALIDA: OUT STD_LOGIC_VECTOR(13 DOWNTO 0));
	END BCD_8BITS;
	
ARCHITECTURE ARC OF BCD_8BITS IS
	
	COMPONENT SUM_BCD IS
	PORT(A,B: IN STD_LOGIC_VECTOR (3 DOWNTO 0);
			CIN: IN STD_LOGIC;
			S: OUT STD_LOGIC_VECTOR (3 DOWNTO 0);
			COUT: OUT STD_LOGIC);
		END COMPONENT SUM_BCD;
	
	COMPONENT BIN2BCD IS
	PORT(BIN: IN STD_LOGIC_VECTOR (3 DOWNTO 0);
			BCD: OUT STD_LOGIC_VECTOR (3 DOWNTO 0));
		END COMPONENT BIN2BCD;
		
	COMPONENT BCD_CODER IS
	PORT(BCD: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
			SEG: OUT STD_LOGIC_VECTOR (6 DOWNTO 0));
		END COMPONENT BCD_CODER
		
	
	SIGNAL BC1: STD_LOGIC_VECTOR (7 DOWNTO 0);
	SIGNAL SIG1: STD_LOGIC_VECTOR (7 DOWNTO 0);
	BEGIN
		
		I0: BIN2BCD PORT MAP(DATO(3 DOWNTO 0), BC1(3 DOWNTO 0));
		I1: BIN2BCD PORT MAP(DATO(7 DOWNTO 4), BC1(7 DOWNTO 4));
	
		PROCESS (S1,S2, BC1)
			BEGIN
			
				IF S1 = '1' THEN 
					SIG1 <= BC1;
				ELSIF S2 = '1' THEN
					SIG2 <= BC1;
				ELSE
					SIG1 <= "00000000";
					SIG2 <= "00000000";
				END IF;
			END PROCESS;
		END ARC;
		
			
			
			
			
			